<%
import java.util.Calendar;
import java.lang.Math ;
import java.util.GregorianCalendar;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import org.exoplatform.calendar.CalendarUtils;
import java.util.Locale;
import org.exoplatform.webui.application.WebuiRequestContext;
import org.exoplatform.calendar.service.CalendarEvent;
import java.text.ParseException;
uiform.begin()

 Calendar currentCalendar = uicomponent.getCurrentCalendar() ;
 int currentDay = uicomponent.getCurrentDay() ;
int currentMonth = uicomponent.getCurrentMonth() ;
 int currentYear = uicomponent.getCurrentYear() ;
timeInterval = uicomponent.getTimeInterval() ;
 def rcontext = _ctx.getRequestContext() ;
numberOfDays = 7 ;
styleWidth = "width:13.8%;*width:14%;" ;
if(uicomponent.isShowCustomView()) {
  numberOfDays = 5 ;
  styleWidth = "width:19.8%;*width:20%;" ;
}
workingStart = uicomponent.getCalendarSetting().getWorkingTimeBegin() ;
int defaultTimeInterval = uicomponent.getDefaultTimeInterval() ;

def requirejs = rcontext.getJavascriptManager().getRequireJS();
requirejs.require("PORTLET/calendar/CalendarPortlet","cal");

requirejs.addScripts('cal.UICalendarPortlet.getWorkingdays('+numberOfDays+') ;') ;

//rcontext.getJavascriptManager().addOnLoadJavascript("eXo.calendar.UICalendarPortlet.onLoad") ; //error in addOnLoadJavascript
requirejs.require("SHARED/base","base");
id = Integer.toString(Math.abs(new String("cal.UICalendarPortlet.onLoad").hashCode()));
requirejs.addScripts("base.Browser.addOnLoadCallback('mid"+id+"',cal.UICalendarPortlet.onLoad);") ;

rcontext.getJavascriptManager().addCustomizedOnLoadScript('cal.UICalendarPortlet.checkFilter') ;
rcontext.getJavascriptManager().addOnResizeJavascript('cal.UIWeekView.onResize') ;
requirejs.addScripts('cal.UICalendarPortlet.currentDate = ' + uicomponent.getDefaultStartTimeOfEvent() +';') ;
rcontext.getJavascriptManager().addCustomizedOnLoadScript('cal.CalendarLayout.updateUICalendarViewLayout(\'UIWeekView\');');
requirejs.addScripts("cal.UICalendarPortlet.loadTitle();");

WebuiRequestContext context = WebuiRequestContext.getCurrentInstance() ;
Locale locale = context.getParentAppRequestContext().getLocale() ;
String currentMonthName = uicomponent.getMonthName(currentMonth) ;
dateFormat = uicomponent.getDateFormat() ;
timeFormat = uicomponent.getTimeFormat() ;
dateTimeFormat = uicomponent.getDateTimeFormat() ;
String startWorkingTime = uicomponent.getStartTime() ;
String endWorkingTime = uicomponent.getEndTime() ;
Calendar startDateOfWeek = uicomponent.getBeginDateOfWeek();
Calendar endDateOfWeek = uicomponent.getEndDateOfWeek();
String startDayViewAction = uicomponent.TYPE_DAY +"&currentTime="+ startDateOfWeek.getTimeInMillis();
String startMonthViewAction = uicomponent.TYPE_MONTH +"&currentTime="+ startDateOfWeek.getTimeInMillis();
String endDayViewAction = uicomponent.TYPE_DAY +"&currentTime="+ endDateOfWeek.getTimeInMillis();
String endMonthViewAction = uicomponent.TYPE_MONTH +"&currentTime="+ endDateOfWeek.getTimeInMillis();
boolean isShowWorkingTime = uicomponent.isShowWorkingTime() ;
DateFormat df = new SimpleDateFormat(dateFormat, locale) ;
DateFormat tf = new SimpleDateFormat(timeFormat, locale) ;
tf.setCalendar(CalendarUtils.getInstanceTempCalendar()) ;
DateFormat dtf = new SimpleDateFormat(dateFormat+" "+CalendarUtils.TIMEFORMAT, locale) ;
DateFormat wf = new  SimpleDateFormat("EEE, dd MMM", locale) ;
DateFormat tempFormat =  new  SimpleDateFormat("EEE MMM dd yyyy HH:mm:ss", Locale.ENGLISH) ;
tempFormat.setCalendar(CalendarUtils.getInstanceTempCalendar()) ;
def eventList = [];
%>
<div class="UIWeekView uiBox uiWeekView">
<div class="title"><%_ctx.include("app:/templates/calendar/webui/UIHeaderBar.gtmpl");%></div>
  <div class="eventWeekBar">
    <table style="table-layout:fixed;" class="uiGrid table "  cellspacing="0" cellpadding="0" exocallback="eXo.calendar.UIWeekView.callbackSelectionX();">
        <tr>
          <td style="width: 55px;" class="UIEmtyBlock"></td>
          <%
            cl = uicomponent.getBeginDateOfWeek() ;
            t = 0 ;
            while(t++ <numberOfDays) {
              cssClass = "day" ;
              if(uicomponent.isCurrentDay(cl.get(Calendar.DATE), cl.get(Calendar.MONTH), cl.get(Calendar.YEAR))) {
                cssClass = "today" ;
              }
              dayActionLink = uicomponent.TYPE_DAY +"&currentTime="+ cl.getTimeInMillis() ;
              actionLink =  uicomponent.event("GotoDate",dayActionLink) ;
              styleCss = "" ;
              if(cl.get(Calendar.DAY_OF_WEEK) == Calendar.SUNDAY){
                 styleCss = "" ;
              }
               wf.setCalendar(cl) ;
          %>
          <td class="$cssClass uiCellBlock center" style="$styleWidth" startTime="<%=cl.getTimeInMillis()%>"  startTimeFull="<%=tempFormat.format(cl.getTime())%>">
            <a href="$actionLink" style="$styleCss">
              <%=wf.format(cl.getTime())%>
            </a>
          </td>
          <%
            cl.add(Calendar.DATE,1) ;
           }
          %>
        </tr>
    </table>
  
  <div id="UIWeekViewGridAllDay" class="eventAllDay" numberOfDays="$numberOfDays">
    <div class="eventAlldayBoard" style="position:relative">
    <table style="table-layout:fixed;" class="uiGrid table allDayTable " cellspacing="0" cellpadding="0">
      <tr>
        <td style="width: 55px;"></td>
        <%
        cl = uicomponent.getBeginDateOfWeek() ;
        t = 0 ;
        while(t++ <numberOfDays) {
        %>
        <td class="whiteTd" style="$styleWidth" startTimeFull="<%=tempFormat.format(cl.getTime())%>">
        </td>
        <%
          cl.add(Calendar.DATE,1);
          } %>
      </tr>
    </table>
    
    <% for (event in uicomponent.allDayEvent) {
      begindate =  event.getFromDateTime().getTime() ;
      enddate = event.getToDateTime().getTime() ;
    
      long startTime = event.getFromDateTime().getTime() ;
      long finishTime = event.getToDateTime().getTime() ;
      color = uicomponent.getColors().get(event.calType +CalendarUtils.COLON+ event.getCalendarId()) ;
      title = tf.format(event.getFromDateTime()) + "->" + tf.format(event.getToDateTime())+ ":&#013; " + event.summary ;
      actionLink =  uicomponent.event("UpdateAllDayEvent",event.getId());
      Boolean isOccur = (event.getRepeatType() != null && !CalendarEvent.RP_NOREPEAT.equals(event.getRepeatType()) && (event.getIsExceptionOccurrence() == null || !event.getIsExceptionOccurrence()));
      String recurId = event.getRecurrenceId();
      def isEditable;
      if (event.calType != CalendarUtils.PRIVATE_TYPE) isEditable = uicomponent.isEventEditable(event);
      else isEditable = "true";
    %>
      <div class="eventContainer eventAlldayContainer weekViewEventBoxes clearfix" eventcat="$event.eventCategoryId" style="position:absolute;display:none;"
        caltype="$event.calType" eventid="$event.id" isOccur="$isOccur" recurId="$recurId" calid="$event.calendarId" startTime="$begindate"  endTime="$enddate"
        startTimeFull="<%=tempFormat.format(event.getFromDateTime())%>" endTimeFull="<%=tempFormat.format(event.getToDateTime())%>"
        actionlink="$actionLink" isEditable="$isEditable">
        <%
          if (!eventList.contains(event.id)) {
            eventList.add(event.id);
        %>
          <input type="hidden" name="${event.id}calType" value="$event.calType" />
          <input type="hidden" name="${event.id}calendarId" value="$event.calendarId" />
          <input type="hidden" name="${event.id}startTime" value="" />
          <input type="hidden" name="${event.id}finishTime" value="" />
          <input type="hidden" name="${event.id}isOccur" value="$isOccur" />
          <input type="hidden" name="${event.id}recurId" value="$recurId" />
          <input type="hidden" name="${event.id}currentDate" value="" />
        <% }  %>
    
        <% if(event.fromDateTime.before(uicomponent.getBeginDateOfWeek().getTime())){ %>
          <div class="leftContinueEvent  pull-left  $color">
            <i class="uiIconMiniArrowLeft uiIconWhite"></i>
          </div>

    <% } else { %>
       <div class="leftResizeEvent LeftResizeEvent resizeEventContainer pull-left  $color">
         <span></span>
      </div>
    <% }
  
      if(event.toDateTime.after(uicomponent.getEndDateOfWeek().getTime())){ %>
       <div class="rightContinueEvent  pull-right  $color">
        <i class="uiIconMiniArrowRight uiIconWhite"></i>
      </div>
    <% } else { %>
      <div class="rightResizeEvent RightResizeEvent resizeEventContainer pull-right  $color">
        <span></span>
      </div>
     
    <% } %>
    
    <div class="eventAlldayContent $color">
      <i class="uiIconCal<%=event.getPriority()%>Priority" style="margin-right: 5px;"></i>
      <%=event.summary%>
    </div>
    </div>
    <% } %>
  </div>

  </div>
  
  </div>
  <div class="eventWeekContent eventWeekContent mainWorkingPanel" style="position: relative;" onresize="eXo.calendar.UIWeekView.onResize() ;">
    <div class="eventBoard">
      <%
      cl = uicomponent.getBeginDateOfWeek() ;
      t = 0 ;
      while(t++ < numberOfDays) {
        day = cl.get(Calendar.DATE) ;
         month = cl.get(Calendar.MONTH) ;
         year = cl.get(Calendar.YEAR) ;
         key = uicomponent.keyGen(day, month, year) ;
         dayOfWeek = cl.get(Calendar.DAY_OF_WEEK) ;
        events = uicomponent.getEventData().get(key) ;
        if(events != null) {
        for(event in events){
          begin =  tf.format(event.fromDateTime) ;
          begindate = dtf.format(event.fromDateTime) ;
          end = tf.format(event.toDateTime) ;
          cal = CalendarUtils.getInstanceTempCalendar() ;
           cal.setTime(event.getFromDateTime()) ;
          beginTime = cal.get(Calendar.HOUR_OF_DAY)*60 + cal.get(Calendar.MINUTE) ;
          cal.setTime(event.getToDateTime()) ;
          endTime = cal.get(Calendar.HOUR_OF_DAY)*60 + cal.get(Calendar.MINUTE) ;
          color = uicomponent.getColors().get(event.calType +CalendarUtils.COLON+ event.getCalendarId()) ;
          actionLink =  uicomponent.event("UpdateEvent",event.id) ;
          Boolean isOccur = (event.getRepeatType() != null && !CalendarEvent.RP_NOREPEAT.equals(event.getRepeatType()) && (event.getIsExceptionOccurrence() == null || !event.getIsExceptionOccurrence()));
          String recurId = event.getRecurrenceId();
          def isEditable;
          if (event.calType != CalendarUtils.PRIVATE_TYPE) isEditable = uicomponent.isEventEditable(event);
          else isEditable = "true";
      %>
      <div class="eventContainerBorder weekViewEventBoxes $color" eventindex="$dayOfWeek"
        style="position: absolute;display:none" eventcat="$event.eventCategoryId" caltype="$event.calType"
        eventid="$event.id" calid="$event.calendarId" actionlink="$actionLink" unselectable="on"
        startTime="$beginTime" endTime="$endTime" isOccur="$isOccur" recurId="$recurId" isEditable="$isEditable">
        <%
          if (!eventList.contains(event.id)) {
            eventList.add(event.id);
        %>
        <input type="hidden" name="${event.id}calType" value="$event.calType" />
        <input type="hidden" name="${event.id}calendarId" value="$event.calendarId" />
        <input type="hidden" name="${event.id}startTime" value="" />
        <input type="hidden" name="${event.id}finishTime" value="" />
        <input type="hidden" name="${event.id}isOccur" value="$isOccur" />
        <input type="hidden" name="${event.id}recurId" value="$recurId" />
        <input type="hidden" name="${event.id}currentDate" value="" />
        <%
          }
        %>


        <% if ( event.isEventDurationSmallerThanHalfHour() ) { %>
        <!---- DISPLAYING EVENT DURATION ---->
        <!-- if event duration smaller than 30 mins then render event in the same line -->
        <div class="clearfix">
    <div unselectable="on" class="eventContainerBar eventTitle pull-left" style=" display: inline-block; ">
      
          <%if(CalendarEvent.TYPE_TASK.equals(event.getEventType())){%>
              <i class="uiIconCalTaskMini"></i>
          <%} else {%>
              <i class="uiIconCalClockMini"></i>
              <%if(isOccur){%>
                  <i class="uiIconCalRecurring"></i>
              <%} else if(!isOccur && event.getIsExceptionOccurrence()){%>
                  <i class="uiIconCalEditRecurring"></i>
              <%}%>
          <%}%>
          <i class="uiIconCal<%=event.getPriority()%>Priority"></i><span>$begin</span>
        </div>

        <!---- DISPLAYING EVENT SUMMARY ---->
        <% if ( (event.getEventType().equals(CalendarEvent.TYPE_TASK) ) && (event.eventState.equals(CalendarEvent.COMPLETED) ) ) { %>
        <!-- if the element is of type TASK check whether it s completed -->
        <div unselectable="on" class="eventContainer" style="text-decoration:line-through; ">
          <%=event.summary%>
        </div>
        <% } else { %>
        <div class="eventContainer " >
          <%=event.summary%>
        </div>
        <% } %>
    </div>
        <% } else { %>
        <!---- DISPLAYING EVENT DURATION ---->
       
        <div unselectable="on" class="eventContainerBar eventTitle">
          <%if(CalendarEvent.TYPE_TASK.equals(event.getEventType())){%>
              <i class="uiIconCalTaskMini"></i>
              <%} else {%>
              <i class="uiIconCalClockMini"></i>
              <%if(isOccur){%>
                  <i class="uiIconCalRecurring"></i>
              <%} else if(!isOccur && event.getIsExceptionOccurrence()){%>
                  <i class="uiIconCalEditRecurring"></i>
              <%}%>
              <%}%>
              <i class="uiIconCal<%=event.getPriority()%>Priority"></i><span>$begin - $end</span>
          
        </div>
        <!---- DISPLAYING EVENT SUMMARY ---->
        <% if ( (event.getEventType().equals(CalendarEvent.TYPE_TASK) ) && (event.eventState.equals(CalendarEvent.COMPLETED) ) ) { %>
        <!-- if the element is of type TASK check whether it's completed -->
        <div unselectable="on" class="eventContainer" style=" text-decoration:line-through; ">
          <%=event.summary%>
        </div>
        <% } else { %>
        <div class="eventContainer">
          <%=event.summary%>
        </div>
        <% } %>
        <% } %>

        <div class="resizeEventContainer" unselectable="on">
          <span></span>
        </div>
      </div>
      <% }
            }
        cl.add(Calendar.DATE, 1) ;
        }
      %>
    </div>
    <table style="table-layout:fixed;" class="uiGrid table " id="UIWeekViewGrid" lastupdatedid="<%=uicomponent.getLastUpdatedEventId()%>" cellspacing="0" cellpadding="0">
      <tbody>
        <%
        boolean flag = false ;
        style = "none" ;
        if(isShowWorkingTime) {style = "WorkOffTime" ;}

        String tempTimeFormat = CalendarUtils.TIMEFORMATPATTERNS[0] ;
        if (timeFormat.startsWith("HH")) tempTimeFormat = CalendarUtils.TIMEFORMATPATTERNS[1] ;
        def counter = 0 ;
    def timeName = "Gray";
        for(full in uicomponent.getDisplayTimes(tempTimeFormat, timeInterval, Locale.ENGLISH)){
    if((counter % 4) == 0 || (counter % 4) == 1) {
     timeName = "OddRow";
    } else if((counter % 4) == 2 || (counter % 4) == 3) {
     timeName = "EvenRow";
    }
    String time = full.substring(0,full.lastIndexOf("_")) ;
    String display = full.substring(full.lastIndexOf("_")+1) ;
      if(isShowWorkingTime) {
      if(time.equals(startWorkingTime)) {style = "" ;}
      if(time.equals(endWorkingTime)) {style = "WorkOffTime" ;}
      }
      if(flag) {styleClass = "tdDotLine" ;}
      else {styleClass = "tdLine";}
        %>
        <tr class="$style $timeName">
    <%if(!flag) {%>
      <td class="tdTime center" style="width: 55px;">
    <%} else {%>
      <td style="width: 55px;">
    <%}%>
        <div>
        <%if(!flag) {println display;} else {println "&nbsp;";} %>
        </div>
      </td>
          <%
             cl = uicomponent.getBeginDateOfWeek() ;
             DateFormat dayFormat = new SimpleDateFormat(dateFormat, Locale.ENGLISH) ;
            DateFormat fullDateFormat = new SimpleDateFormat(dateFormat+" "+CalendarUtils.TIMEFORMAT, Locale.ENGLISH) ;
            dayFormat.setCalendar(cl);
            fullDateFormat.setCalendar(cl);

            t = 0 ;
            while(t++ < numberOfDays) {
              //df.setCalendar(cl) ;
               startTime = dayFormat.format(cl.getTime()) + " " + time;
               //dtf.setCalendar(cl) ;
               fullDateFormat.setLenient(false);
               // add try-catch block to handle Daylight Saving Time problem
               try {
                 cl.setTime(fullDateFormat.parse(startTime)) ;
               } catch (ParseException e) {
                 fullDateFormat.setLenient(true);
                 cl.setTime(fullDateFormat.parse(startTime));
               }
               dayOfWeek = cl.get(Calendar.DAY_OF_WEEK) ;
               if(uicomponent.isCurrentDay(cl.get(Calendar.DATE), cl.get(Calendar.MONTH), cl.get(Calendar.YEAR))) {
                cssClass = "today" ;
              }else if(dayOfWeek == 1 || dayOfWeek == 7){
                 cssClass = "Weekend" ;
               } else {
                 cssClass = "Weekday" ;
               }
          %>
          <td startFull="<%=tempFormat.format(cl.getTime())%>" startTime="<%=cl.getTimeInMillis()%>" eventindex="$dayOfWeek" class="$styleClass $cssClass $style" style="$styleWidth">
            <span></span>
          </td>
          <%
               cl.add(Calendar.DATE, 1) ;
             }
           flag = ! flag ;
           %>
        </tr>
           <%
     counter ++;
         }
          %>
      </tbody>
    </table>
  </div>
</div>
<%uiform.end();%>

<% /*Begin Popup Menu - Calendar Actions */ %>
  <div class="uiRightClickPopupMenu dropdown-menu uiDropdownWithIcon" id="UIWeekViewRightMenu" exocallback="eXo.calendar.UICalendarPortlet.weekViewCallback" style="display: none ;" >
    <ul class="uiDropDownCal" style="display:block;">
      <li style="display: none;">
          <a class="eventAction" href="<%= uicomponent.event("View",uicomponent.id,"id&$uicomponent.CALENDARID=calId&calType=caltype&isOccur=isOccur&recurId=recurId") ; %>">
            <i class="uiIconPreview uiIconLightGray"></i>
            <%=_ctx.appRes("ContextMenu.label.View")%>
          </a>
      </li>
      <li style="display: none;">
          <a class="eventAction" href="<%= uicomponent.event("Edit",uicomponent.id,"id&$uicomponent.CALENDARID=calId&calType=caltype&isOccur=isOccur&recurId=recurId") ; %>">
            <i class="uiIconEdit uiIconLightGray"></i>
            <%=_ctx.appRes("ContextMenu.label.Edit")%>
          </a>
      </li>
      <li style="display: none;">
          <a class="eventAction" href="<%= uicomponent.event("Delete",uicomponent.id,"id&$uicomponent.CALENDARID=calId&calType=caltype&isOccur=isOccur&recurId=recurId") ; %>">
            <i class="uiIconDelete uiIconLightGray"></i>
            <%=_ctx.appRes("ContextMenu.label.Delete")%>
          </a>
      </li>
      <li style="display: none;">
          <a class="eventAction" href="<%=uicomponent.event("ExportEvent","id&$uicomponent.CALENDARID=calId&$uicomponent.CALTYPE=caltype")%>">
            <i class="uiIconCalExportCalendar uiIconLightGray"></i>
            <%=_ctx.appRes("ContextMenu.label.ExportEvent")%>
          </a>
        </li>
      <li>
        <a class="createEvent" href="#">
        <i class="uiIconCalCreateEvent uiIconLightGray"></i>
        <%=_ctx.appRes("ContextMenu.label.addEvent")%>
        </a>
      </li>
      <li>
        <a class="createTask" href="#">
        <i class="uiIconCalCreateTask uiIconLightGray"></i>
        <%=_ctx.appRes("ContextMenu.label.addTask")%>
        </a>
      </li>
    </ul>
  </div>
    
  <% /*End Popup Menu*/ %>
