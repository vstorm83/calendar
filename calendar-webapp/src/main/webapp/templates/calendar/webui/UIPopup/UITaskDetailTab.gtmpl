<%
  uiForm = uicomponent.getParentFrom();
  private void renderActions(String fieldKey) {
    def actions = uicomponent.getActionField(fieldKey) ;
    if(actions != null) {
      for(action in actions) {
        String actionLabel = uiForm.getLabel("action." + action.actionName)  ;
        if(actionLabel.equals("action." + action.actionName)) {
          actionLabel = action.actionName ;
        }
        String actionLink ="";
        if(action.actionParameter != null) {
          actionLink = (uiForm.event(action.actionListener, action.actionParameter)) ;
        }else {
          actionLink = (uiForm.event(action.actionListener)) ;
        }
        if(actionLabel.lastIndexOf("-(") > 0)
        {
          String temp = actionLabel.substring(0, actionLabel.lastIndexOf("-(")) ;
          String sizeLabel = actionLabel.substring(actionLabel.lastIndexOf("-(")) ;
          if(temp.length() > 21) {
          actionLabel = temp.substring(0, 21) + "..." + sizeLabel ;}
        }
        %>
        <a class="actionIcon" rel="tooltip" data-placement="bottom" title="$actionLabel" href="$actionLink">
        <%
        if(action.actionType == action.TYPE_ICON) {
        %>
          <i class="$action.cssIconClass"></i>
        <%  
          if(action.isShowLabel) { println  actionLabel  ;}
        }else if(action.actionType == action.TYPE_LINK){
         println actionLabel ;
        }
        println  "</a>";
        if(action.isBreakLine) { println "<br/>" ;} 
      }
    }
  }
  def rcontext = _ctx.getRequestContext() ;  
  def requireJS = rcontext.getJavascriptManager().getRequireJS();
  requireJS.require("PORTLET/calendar/CalendarPortlet","cal");
  requireJS.require("SHARED/jquery","gj");
  requireJS.addScripts('cal.UICalendarPortlet.initDetailTab("UITaskForm","' + uiForm.getCalendarId() + '") ;') ;
  requireJS.addScripts("gj('#UITaskDetailTab_FIELD_CHECKALL').click(function() {cal.UICalendarPortlet.showHideTime(this) ; });");
  requireJS.addScripts("cal.UICalendarPortlet.dateSuggestion('"+uiForm.isAddNew_+"','"+uiForm.id+"','0');");
  %>
<div id="$uicomponent.id" class="uiAddNewEvent taskDetailTab">
  <div class="form-horizontal">
	<div class="control-group">
		<div class="control-label" ><%=uiForm.getLabel(uicomponent.FIELD_EVENT)%>:</div>
		<div class="controls">
			<%uiForm.renderField(uicomponent.FIELD_EVENT)%>
		</div>
	</div>
	<div class="control-group">
		<div class="control-label" ><%=uiForm.getLabel(uicomponent.FIELD_DESCRIPTION)%>:</div>
		<div class="controls descriptionArea">
			<%uiForm.renderField(uicomponent.FIELD_DESCRIPTION)%>
		</div>
	</div>
    <div class="control-group">
		<div class="control-label" ><%=uiForm.getLabel(uicomponent.FIELD_DELEGATION)%>:</div>
		<div class="controls">
			<%uiForm.renderField(uicomponent.FIELD_DELEGATION)
             renderActions(uicomponent.FIELD_DELEGATION) ;
          %>
		</div>
	</div>
	<div class="control-group">
		<div class="control-label" ><%=uiForm.getLabel(uicomponent.FIELD_FROM)%>:</div>
		<div class="controls">
			<div class="date inputSmall pull-left">
				 <%uiForm.renderField(uicomponent.FIELD_FROM)%>
			</div>
			<div class="time inputSmall pull-left"><!-- start time -->
				<%uiForm.renderField(uicomponent.FIELD_FROM_TIME)%>
			</div>
		</div>
	</div>     
	<div class="control-group">
		<div class="control-label" ><%=uiForm.getLabel(uicomponent.FIELD_TO)%>:</div>
		<div class="controls">
			<div class="date inputSmall pull-left">
				<%uiForm.renderField(uicomponent.FIELD_TO)%>
			</div>
			<div class="time inputSmall pull-left"><!-- start time -->
				<%uiForm.renderField(uicomponent.FIELD_TO_TIME)%>
			</div>
		</div>
	</div>  
    <div class="control-group checkBoxArea">
		<div class="control-label" ><%=uiForm.getLabel(uicomponent.FIELD_CHECKALL)%>:</div>
		<div class="controls " id="UITaskDetailTab_FIELD_CHECKALL"  ><!-- check all -->
			<%uiForm.renderField(uicomponent.FIELD_CHECKALL)%>
		</div>
	</div> 
	<div class="control-group">
		<div class="control-label" ><%=uiForm.getLabel(uicomponent.FIELD_PRIORITY)%>:</div>
		<div class="controls">
			<%uiForm.renderField(uicomponent.FIELD_PRIORITY)%>
		</div>
	</div>     
	<div class="control-group">
		<div class="control-label" ><%=uiForm.getLabel(uicomponent.FIELD_CALENDAR)%>:</div>
		<div class="controls">
			<%uiForm.renderField(uicomponent.FIELD_CALENDAR)%>
		</div>
	</div> 	
	  <%if(uicomponent.getChildById(uicomponent.FIELD_CATEGORY) != null && uicomponent.getChildById(uicomponent.FIELD_CATEGORY).isRendered()){%>
		<div class="control-group">
			<div class="control-label" ><%=uiForm.getLabel(uicomponent.FIELD_CATEGORY)%>:</div>
			<div class="controls">
				<%
			  uiForm.renderField(uicomponent.FIELD_CATEGORY) ;
			  renderActions(uicomponent.FIELD_CATEGORY) ;
			%>
			</div>
		</div> 	
	  <%}%>
	<div class="control-group">
		<div class="control-label" ><%=uiForm.getLabel(uicomponent.FIELD_STATUS)%>:</div>
		<div class="controls">
			<%
            uiForm.renderField(uicomponent.FIELD_STATUS) ;
          %>
		</div>
	</div>
	<div class="control-group">
		<div class="control-label" ><%=uiForm.getLabel(uicomponent.FIELD_ATTACHMENTS)%>:</div>
		<div class="controls">
			<%renderActions(uicomponent.FIELD_ATTACHMENTS) ;%>
       <% if (uicomponent.attachments_.size() < 10) { %>
          <button onclick="<%= uicomponent.getParent().event("AddAttachment") %>" type="button" class="btn">
            <i class="uiIconAttach uiIconLightGray"></i> <%=uiForm.getLabel(uicomponent.LABEL_ADD_ATTACHMENTS)%>
          </button>
          <% } else { %>
          <button onclick="javascript:void(0);" type="button" class="btn disableIcon" rel="tooltip" data-placement="bottom"
			     title="<%=_ctx.appRes(uiForm.id + '.msg.limit-attachment-begin') %> $uiForm.LIMIT_FILE_UPLOAD <%=_ctx.appRes(uiForm.id + '.msg.limit-attachment-end') %>">
            <i class="uiIconAttach uiIconLightGray"></i> <%=uiForm.getLabel(uicomponent.LABEL_ADD_ATTACHMENTS)%>
          </button>
	      <% } %>
		</div>
	</div>  	
  </div>
</div>
